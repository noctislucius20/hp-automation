- name: create monitoring script from template
  template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: root
      group: root
      mode: 0644
  with_items:
      - src: monitoring_honeypot_oop.j2
        dest: /home/ansigent/monitoring_honeypot_oop.py
      - src: monitoring_raspi_oop.j2
        dest: /home/ansigent/monitoring_raspi_oop.py

- name: create cronjob from template
  template:
      src: monitoring_cronjob.j2
      dest: /home/ansigent/monitoring_cronjob
      owner: ansigent
      group: root
      mode: 0644

- name: run script using cronjob
  command: crontab -u ansigent monitoring_cronjob

# - name: tes
#   template:
#       src: monitoring_dashboard.j2
#       dest: /home/ansigent/monitoring_dashboard.json
#       owner: ansigent
#       group: root
#       mode: 0644
#   vars:
#       dashboard_uuid: "eeeeeeeeeeee"

- name: create monitoring dashboard
  uri:
      url: http://192.168.1.100:5601/api/kibana/dashboards/import?exclude=index-pattern
      method: POST
      body_format: json
      body: "{{ lookup('template', '../roles/monitoring/templates/monitoring_dashboard.j2') }}"
      headers:
          Content-Type: "application/json"
          kbn-xsrf: "true"
      return_content: yes
  vars:
      dashboard_uuid: "{{ ansible_date_time.iso8601_micro | to_uuid }}"
# - name: Send POST request to Elasticsearch cluster
#   uri:
#       url: http://elasticsearch.example.com/myindex/_search
#       method: POST
#       body:
#           query: { "match_all": {} }
#       headers:
#           Content-Type: "application/json"
#       return_content: yes
#   register: elasticsearch_response

# - name: Insert data into PostgreSQL database
#   postgresql_query:
#       db: mydatabase
#       login_user: myuser
#       login_password: mypassword
#       query: "INSERT INTO mytable (column1, column2) VALUES ('value1', 'value2')"
